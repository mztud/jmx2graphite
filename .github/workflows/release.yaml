name: Release

on:
  release:
    types: [ published ]

jobs:
  release-github:
    name: Publish Binaries to GitHub Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Determine version
        run: version=`echo '${{ github.ref }}' | cut -d '/' -f 3`; echo "name=VERSION::$version" >> $GITHUB_OUTPUT
        id: determine-version
      - name: Set version
        run: mvn versions:set -DnewVersion=${{ steps.determine-version.outputs.VERSION }}
      - name: Build with Maven
        run: mvn -B package --file pom.xml

  release-docker:
    name: Release Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: [release-github]
    steps:
      - name: Determine version
        # ref example: refs/tags/1.6.0
        run: version=`echo '${{ github.ref }}' | cut -d '/' -f 3`; echo "name=VERSION::$version" >> $GITHUB_OUTPUT
        id: determine-version
      - name: Checkout
        uses: actions/checkout@main
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: 'Build Inventory Image'
        run: |
          docker build . --tag ghcr.io/mztud/jmx2graphite:latest
          docker push ghcr.io/mztud/jmx2graphite:latest
          docker build . --tag ghcr.io/mztud/jmx2graphite:${{ steps.determine-version.outputs.VERSION }}
          docker push ghcr.io/mztud/jmx2graphite:${{ steps.determine-version.outputs.VERSION }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
